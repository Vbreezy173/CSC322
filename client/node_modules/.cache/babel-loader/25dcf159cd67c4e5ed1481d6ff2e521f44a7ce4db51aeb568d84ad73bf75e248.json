{"ast":null,"code":"var _jsxFileName = \"/Users/veraldval/Desktop/GitHub/csc322/client/src/components/ChatBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ChatBox.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatBox() {\n  _s();\n  const [chatWindowDisplay, setChatWindowDisplay] = useState(false);\n  const [messages, setMessages] = useState([{\n    sender: 'Bot',\n    message: 'Hello! How may I help you?'\n  }]);\n  const [userInput, setUserInput] = useState('');\n  const toggleChatWindowDisplay = () => {\n    setChatWindowDisplay(!chatWindowDisplay);\n  };\n  const taboolist = [\"fuck\", \"bitch\", \"shit\", \"motherfucker\", \"fucker\", \"asshole\", \"cunt\", \"faggot\", \"bastard\", \"nigga\", \"fuc\"];\n\n  //filter for users i.e.. replaces bad words with stars and sends\n  function filterBadWords(text) {\n    const regex = new RegExp(taboolist.join(\"|\"), \"gi\");\n    const cleanText = text.replace(regex, \"*****\");\n    return cleanText;\n  }\n\n  //filter for visitors i.e.. cannot send bad words at all\n  function Visitorfilter(text) {\n    const regex = new RegExp(taboolist.join(\"|\"), \"gi\");\n    const vfiltered = text.replace(regex, \"\");\n    return vfiltered;\n  }\n\n  // get login status\n  const loginstat = localStorage.getItem(\"LoginStatus\");\n  const handleUserInput = event => {\n    const usermessage = event.target.value;\n    setUserInput(usermessage);\n  };\n  const handleSendMessage = () => {\n    //if statement to prevent users from sending empty messages\n    if (userInput !== '') {\n      setMessages([...messages, {\n        sender: 'You',\n        message: userInput\n      }]);\n      setUserInput('');\n\n      // if (user is logged in == user is registered) {send bad word in ***s}\n      if (loginstat) {\n        setMessages([...messages, {\n          sender: 'You',\n          message: filterBadWords(userInput)\n        }]);\n        setUserInput('');\n      }\n      // else if(user is not logged in == user is not registered) {delete bad word message}\n      else {\n        setMessages([...messages, {\n          sender: 'You',\n          message: Visitorfilter(userInput)\n        }]);\n        setUserInput('');\n      }\n    }\n  };\n  const handleKeyDown = event => {\n    // Send message if Enter key is pressed\n    if (event.keyCode === 13) {\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chat-bot\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat-icon\",\n      onClick: toggleChatWindowDisplay,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: require('../img/chat_employee.png'),\n        alt: \"Chat Icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat-window\",\n      style: {\n        display: chatWindowDisplay ? 'block' : 'none'\n      },\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [message.sender, \": \", message.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chat-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"chat-input\",\n          placeholder: \"Ask a question...\",\n          value: userInput,\n          onChange: handleUserInput,\n          onKeyDown: handleKeyDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"chat-send-button\",\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBox, \"lGyOeG9n3lTR1XLb9JdMp2Ivwrk=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatBox","_s","chatWindowDisplay","setChatWindowDisplay","messages","setMessages","sender","message","userInput","setUserInput","toggleChatWindowDisplay","taboolist","filterBadWords","text","regex","RegExp","join","cleanText","replace","Visitorfilter","vfiltered","loginstat","localStorage","getItem","handleUserInput","event","usermessage","target","value","handleSendMessage","handleKeyDown","keyCode","id","children","onClick","src","require","alt","fileName","_jsxFileName","lineNumber","columnNumber","style","display","map","index","className","type","placeholder","onChange","onKeyDown","_c","$RefreshReg$"],"sources":["/Users/veraldval/Desktop/GitHub/csc322/client/src/components/ChatBox.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport './ChatBox.css'\n\nfunction ChatBox() {\n  const [chatWindowDisplay, setChatWindowDisplay] = useState(false);\n  const [messages, setMessages] = useState([\n    { sender: 'Bot', message: 'Hello! How may I help you?' }\n  ]);\n  const [userInput, setUserInput] = useState('');\n\n  const toggleChatWindowDisplay = () => {\n    setChatWindowDisplay(!chatWindowDisplay);\n  };\n\n  const taboolist = [\"fuck\", \"bitch\", \"shit\", \"motherfucker\", \"fucker\", \"asshole\", \"cunt\", \"faggot\", \"bastard\", \"nigga\", \"fuc\"]; \n\n    //filter for users i.e.. replaces bad words with stars and sends\n  function filterBadWords(text) {\n    const regex = new RegExp(taboolist.join(\"|\"), \"gi\");\n    const cleanText = text.replace(regex, \"*****\"); \n    return cleanText;\n  }\n\n    //filter for visitors i.e.. cannot send bad words at all\n    function Visitorfilter(text) {\n      const regex = new RegExp(taboolist.join(\"|\"), \"gi\");\n      const vfiltered = text.replace(regex, \"\"); \n      return vfiltered;\n    }\n\n  // get login status\n  const loginstat = localStorage.getItem(\"LoginStatus\");\n\n  const handleUserInput = (event) => {\n    const usermessage = event.target.value;\n    setUserInput(usermessage);\n  };\n\n  const handleSendMessage = () => {\n    //if statement to prevent users from sending empty messages\n    if (userInput !== ''){\n    setMessages([...messages, { sender: 'You', message: userInput }]);\n    setUserInput('');\n\n    // if (user is logged in == user is registered) {send bad word in ***s}\n    if (loginstat)\n    {\n      setMessages([...messages, { sender: 'You', message: filterBadWords(userInput) }]);\n      setUserInput('');\n    }\n    // else if(user is not logged in == user is not registered) {delete bad word message}\n    else\n    {\n      setMessages([...messages, { sender: 'You', message: Visitorfilter(userInput) }]);\n      setUserInput('');\n    }}\n  };\n\n  const handleKeyDown = (event) => {\n    // Send message if Enter key is pressed\n    if (event.keyCode === 13) {\n      handleSendMessage();\n    }\n  };\n\n\n  return (\n    <div id=\"chat-bot\">\n      <div id=\"chat-icon\" onClick={toggleChatWindowDisplay}>\n        <img src={require('../img/chat_employee.png')} alt=\"Chat Icon\" />\n      </div>\n      <div id=\"chat-window\" style={{ display: chatWindowDisplay ? 'block' : 'none' }}>\n        {messages.map((message, index) => (\n          <div key={index} className=\"message\">\n            <p>{message.sender}: {message.message}</p>\n          </div>\n        ))}\n        <div id=\"chat-input-container\">\n          <input type=\"text\" id=\"chat-input\" placeholder=\"Ask a question...\" value={userInput} onChange={handleUserInput} onKeyDown={handleKeyDown} />\n          <button id=\"chat-send-button\" onClick={handleSendMessage}>Send</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatBox;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}