{"ast":null,"code":"var _jsxFileName = \"/Users/veraldval/Desktop/GitHub/csc322/client/src/components/filter/Filter_brand.js\";\nimport React from 'react';\nimport './Filter_cat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Filter_brand = _ref => {\n  let {\n    brand,\n    selectedBrand,\n    setSelectedBrand\n  } = _ref;\n  const handleCategoryChange = event => {\n    console.log('handleCategoryChange called');\n    if (event.target.checked) {\n      setSelectedBrand([...selectedBrand, event.target.value]);\n    } else {\n      setSelectedBrand(selectedBrand.filter(category => category !== event.target.value));\n    }\n    console.log('selectedBrand:', selectedBrand);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filter-brand\",\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"brand\",\n        value: brand,\n        checked: selectedBrand.includes(brand),\n        onChange: handleCategoryChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), brand]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_c = Filter_brand;\nexport default Filter_brand;\nvar _c;\n$RefreshReg$(_c, \"Filter_brand\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Filter_brand","_ref","brand","selectedBrand","setSelectedBrand","handleCategoryChange","event","console","log","target","checked","value","filter","category","className","children","type","name","includes","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/veraldval/Desktop/GitHub/csc322/client/src/components/filter/Filter_brand.js"],"sourcesContent":["import React from 'react';\nimport './Filter_cat.css';\n\nconst Filter_brand = ({ brand, selectedBrand, setSelectedBrand }) => {\n    const handleCategoryChange = (event) => {\n        console.log('handleCategoryChange called');\n        if (event.target.checked) {\n            setSelectedBrand([...selectedBrand, event.target.value]);\n        } else {\n            setSelectedBrand(\n            selectedBrand.filter((category) => category !== event.target.value)\n          );\n        }\n        console.log('selectedBrand:', selectedBrand);\n      };\n    \n    return (\n        <div className=\"filter-brand\">\n            <label>\n                <input\n                type=\"checkbox\"\n                name=\"brand\"\n                value={brand}\n                checked={selectedBrand.includes(brand)}\n                onChange={handleCategoryChange}\n                />\n                {brand}\n            </label>\n        </div>\n    )\n}\n\nexport default Filter_brand"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGC,IAAA,IAAgD;EAAA,IAA/C;IAAEC,KAAK;IAAEC,aAAa;IAAEC;EAAiB,CAAC,GAAAH,IAAA;EAC5D,MAAMI,oBAAoB,GAAIC,KAAK,IAAK;IACpCC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC1C,IAAIF,KAAK,CAACG,MAAM,CAACC,OAAO,EAAE;MACtBN,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAEG,KAAK,CAACG,MAAM,CAACE,KAAK,CAAC,CAAC;IAC5D,CAAC,MAAM;MACHP,gBAAgB,CAChBD,aAAa,CAACS,MAAM,CAAEC,QAAQ,IAAKA,QAAQ,KAAKP,KAAK,CAACG,MAAM,CAACE,KAAK,CACpE,CAAC;IACH;IACAJ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEL,aAAa,CAAC;EAC9C,CAAC;EAEH,oBACIJ,OAAA;IAAKe,SAAS,EAAC,cAAc;IAAAC,QAAA,eACzBhB,OAAA;MAAAgB,QAAA,gBACIhB,OAAA;QACAiB,IAAI,EAAC,UAAU;QACfC,IAAI,EAAC,OAAO;QACZN,KAAK,EAAET,KAAM;QACbQ,OAAO,EAAEP,aAAa,CAACe,QAAQ,CAAChB,KAAK,CAAE;QACvCiB,QAAQ,EAAEd;MAAqB;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,EACDrB,KAAK;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd,CAAC;AAAAC,EAAA,GA3BKxB,YAAY;AA6BlB,eAAeA,YAAY;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}